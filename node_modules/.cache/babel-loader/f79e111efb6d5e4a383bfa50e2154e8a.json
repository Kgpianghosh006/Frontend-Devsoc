{"ast":null,"code":"import React,{useState,useEffect}from'react';import JobList from'./components/JobList';import SearchBar from'./components/SearchBar';import FilterButtons from'./components/FilterButtons';import Pagination from'./components/Pagination';import JobModal from'./components/JobModal';import jobs from'./components/jobs.json';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[jobs,setJobs]=useState([]);const[search,setSearch]=useState('');const[filter,setFilter]=useState('');const[currentPage,setCurrentPage]=useState(1);const[selectedJob,setSelectedJob]=useState(null);const[loading,setLoading]=useState(true);useEffect(()=>{// Simulate data fetching\nsetTimeout(()=>{setJobs(dummyData);setLoading(false);},1000);},[]);const filteredJobs=jobs.filter(job=>job.title.includes(search)||job.location.includes(search)).filter(job=>filter?job.type===filter:true);const jobsPerPage=10;const totalPages=Math.ceil(filteredJobs.length/jobsPerPage);const displayedJobs=filteredJobs.slice((currentPage-1)*jobsPerPage,currentPage*jobsPerPage);return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsx(SearchBar,{search:search,setSearch:setSearch}),/*#__PURE__*/_jsx(FilterButtons,{filter:filter,setFilter:setFilter}),loading?/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"}):/*#__PURE__*/_jsx(JobList,{jobs:displayedJobs}),/*#__PURE__*/_jsx(Pagination,{currentPage:currentPage,totalPages:totalPages,setPage:setCurrentPage}),/*#__PURE__*/_jsx(JobModal,{job:selectedJob,onClose:()=>setSelectedJob(null)})]});};export default App;","map":{"version":3,"names":["React","useState","useEffect","JobList","SearchBar","FilterButtons","Pagination","JobModal","jobs","jsx","_jsx","jsxs","_jsxs","App","setJobs","search","setSearch","filter","setFilter","currentPage","setCurrentPage","selectedJob","setSelectedJob","loading","setLoading","setTimeout","dummyData","filteredJobs","job","title","includes","location","type","jobsPerPage","totalPages","Math","ceil","length","displayedJobs","slice","className","children","setPage","onClose"],"sources":["D:/Downloads/Frontend Devsoc/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport JobList from './components/JobList';\r\nimport SearchBar from './components/SearchBar';\r\nimport FilterButtons from './components/FilterButtons';\r\nimport Pagination from './components/Pagination';\r\nimport JobModal from './components/JobModal';\r\nimport jobs from './components/jobs.json';\r\n\r\nconst App = () => {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [search, setSearch] = useState('');\r\n  const [filter, setFilter] = useState('');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedJob, setSelectedJob] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Simulate data fetching\r\n    setTimeout(() => {\r\n      setJobs(dummyData);\r\n      setLoading(false);\r\n    }, 1000);\r\n  }, []);\r\n\r\n  const filteredJobs = jobs\r\n    .filter(job => job.title.includes(search) || job.location.includes(search))\r\n    .filter(job => (filter ? job.type === filter : true));\r\n\r\n  const jobsPerPage = 10;\r\n  const totalPages = Math.ceil(filteredJobs.length / jobsPerPage);\r\n  const displayedJobs = filteredJobs.slice((currentPage - 1) * jobsPerPage, currentPage * jobsPerPage);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <SearchBar search={search} setSearch={setSearch} />\r\n      <FilterButtons filter={filter} setFilter={setFilter} />\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : (\r\n        <JobList jobs={displayedJobs} />\r\n      )}\r\n      <Pagination currentPage={currentPage} totalPages={totalPages} setPage={setCurrentPage} />\r\n      <JobModal job={selectedJob} onClose={() => setSelectedJob(null)} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,OAAO,KAAM,sBAAsB,CAC1C,MAAO,CAAAC,SAAS,KAAM,wBAAwB,CAC9C,MAAO,CAAAC,aAAa,KAAM,4BAA4B,CACtD,MAAO,CAAAC,UAAU,KAAM,yBAAyB,CAChD,MAAO,CAAAC,QAAQ,KAAM,uBAAuB,CAC5C,MAAO,CAAAC,IAAI,KAAM,wBAAwB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1C,KAAM,CAAAC,GAAG,CAAGA,CAAA,GAAM,CAChB,KAAM,CAACL,IAAI,CAAEM,OAAO,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CACpC,KAAM,CAACc,MAAM,CAAEC,SAAS,CAAC,CAAGf,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAACgB,MAAM,CAAEC,SAAS,CAAC,CAAGjB,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAACkB,WAAW,CAAEC,cAAc,CAAC,CAAGnB,QAAQ,CAAC,CAAC,CAAC,CACjD,KAAM,CAACoB,WAAW,CAAEC,cAAc,CAAC,CAAGrB,QAAQ,CAAC,IAAI,CAAC,CACpD,KAAM,CAACsB,OAAO,CAAEC,UAAU,CAAC,CAAGvB,QAAQ,CAAC,IAAI,CAAC,CAE5CC,SAAS,CAAC,IAAM,CACd;AACAuB,UAAU,CAAC,IAAM,CACfX,OAAO,CAACY,SAAS,CAAC,CAClBF,UAAU,CAAC,KAAK,CAAC,CACnB,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAG,YAAY,CAAGnB,IAAI,CACtBS,MAAM,CAACW,GAAG,EAAIA,GAAG,CAACC,KAAK,CAACC,QAAQ,CAACf,MAAM,CAAC,EAAIa,GAAG,CAACG,QAAQ,CAACD,QAAQ,CAACf,MAAM,CAAC,CAAC,CAC1EE,MAAM,CAACW,GAAG,EAAKX,MAAM,CAAGW,GAAG,CAACI,IAAI,GAAKf,MAAM,CAAG,IAAK,CAAC,CAEvD,KAAM,CAAAgB,WAAW,CAAG,EAAE,CACtB,KAAM,CAAAC,UAAU,CAAGC,IAAI,CAACC,IAAI,CAACT,YAAY,CAACU,MAAM,CAAGJ,WAAW,CAAC,CAC/D,KAAM,CAAAK,aAAa,CAAGX,YAAY,CAACY,KAAK,CAAC,CAACpB,WAAW,CAAG,CAAC,EAAIc,WAAW,CAAEd,WAAW,CAAGc,WAAW,CAAC,CAEpG,mBACErB,KAAA,QAAK4B,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClB/B,IAAA,CAACN,SAAS,EAACW,MAAM,CAAEA,MAAO,CAACC,SAAS,CAAEA,SAAU,CAAE,CAAC,cACnDN,IAAA,CAACL,aAAa,EAACY,MAAM,CAAEA,MAAO,CAACC,SAAS,CAAEA,SAAU,CAAE,CAAC,CACtDK,OAAO,cACNb,IAAA,MAAA+B,QAAA,CAAG,YAAU,CAAG,CAAC,cAEjB/B,IAAA,CAACP,OAAO,EAACK,IAAI,CAAE8B,aAAc,CAAE,CAChC,cACD5B,IAAA,CAACJ,UAAU,EAACa,WAAW,CAAEA,WAAY,CAACe,UAAU,CAAEA,UAAW,CAACQ,OAAO,CAAEtB,cAAe,CAAE,CAAC,cACzFV,IAAA,CAACH,QAAQ,EAACqB,GAAG,CAAEP,WAAY,CAACsB,OAAO,CAAEA,CAAA,GAAMrB,cAAc,CAAC,IAAI,CAAE,CAAE,CAAC,EAChE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAT,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module"}